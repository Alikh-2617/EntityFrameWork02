// <auto-generated />
using System;
using EntityFrameWork02.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EntityFrameWork02.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221123125610_ID")]
    partial class ID
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CityCountry", b =>
                {
                    b.Property<string>("CityId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CountryId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CityId", "CountryId");

                    b.HasIndex("CountryId");

                    b.ToTable("CityCountry");
                });

            modelBuilder.Entity("CityLanguage", b =>
                {
                    b.Property<string>("CityId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LanguageId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CityId", "LanguageId");

                    b.HasIndex("LanguageId");

                    b.ToTable("CityLanguage");
                });

            modelBuilder.Entity("CityPerson", b =>
                {
                    b.Property<string>("CitysId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PeopleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CitysId", "PeopleId");

                    b.HasIndex("PeopleId");

                    b.ToTable("CityPerson");
                });

            modelBuilder.Entity("CountryLanguage", b =>
                {
                    b.Property<string>("CountryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LanguageId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CountryId", "LanguageId");

                    b.HasIndex("LanguageId");

                    b.ToTable("CountryLanguage");
                });

            modelBuilder.Entity("CountryPerson", b =>
                {
                    b.Property<string>("CountrysId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PersonId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CountrysId", "PersonId");

                    b.HasIndex("PersonId");

                    b.ToTable("CountryPerson");
                });

            modelBuilder.Entity("EntityFrameWork02.Models.City", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Register")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            Id = "5bcb6dd3-ab87-4800-b027-628666104204",
                            Name = "Åre",
                            PostNumber = "123 45",
                            Register = new DateTime(2022, 11, 23, 13, 56, 9, 587, DateTimeKind.Local).AddTicks(1360)
                        },
                        new
                        {
                            Id = "e0c28688-f4cb-4949-83fc-70fa54cf7bf6",
                            Name = "Järpen",
                            PostNumber = "123 45",
                            Register = new DateTime(2022, 11, 23, 13, 56, 9, 587, DateTimeKind.Local).AddTicks(1378)
                        },
                        new
                        {
                            Id = "edba7e92-0b2e-4355-865c-99ddb86303ac",
                            Name = "Östersund",
                            PostNumber = "123 88",
                            Register = new DateTime(2022, 11, 23, 13, 56, 9, 587, DateTimeKind.Local).AddTicks(1390)
                        });
                });

            modelBuilder.Entity("EntityFrameWork02.Models.Country", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Register")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            Id = "cb0322aa-a99c-47d7-93d8-dff5e0edf9d1",
                            Name = "Sweden",
                            Register = new DateTime(2022, 11, 23, 13, 56, 9, 587, DateTimeKind.Local).AddTicks(1406)
                        },
                        new
                        {
                            Id = "58c93865-582b-445d-9395-572f41e89201",
                            Name = "Norway",
                            Register = new DateTime(2022, 11, 23, 13, 56, 9, 587, DateTimeKind.Local).AddTicks(1421)
                        },
                        new
                        {
                            Id = "d8984e28-5631-4f60-bdb9-f1b5ed32170b",
                            Name = "Danmark",
                            Register = new DateTime(2022, 11, 23, 13, 56, 9, 587, DateTimeKind.Local).AddTicks(1432)
                        });
                });

            modelBuilder.Entity("EntityFrameWork02.Models.Language", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Language");

                    b.HasData(
                        new
                        {
                            Id = "08de0cdf-11f3-4944-bb34-ddedb5c8267d",
                            Name = "Svenska"
                        },
                        new
                        {
                            Id = "39c60245-1026-4029-b435-9bb83ef59b75",
                            Name = "Norske"
                        },
                        new
                        {
                            Id = "7cd221c6-cda6-4e1b-b001-953b6776fd85",
                            Name = "Periska"
                        });
                });

            modelBuilder.Entity("EntityFrameWork02.Models.Person", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Register")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            Id = "76e07371-5b7f-4747-bfc4-f9525fbf213e",
                            Age = 32,
                            Name = "Ali",
                            PhoneNumber = "123456",
                            Register = new DateTime(2022, 11, 23, 13, 56, 9, 587, DateTimeKind.Local).AddTicks(1223)
                        },
                        new
                        {
                            Id = "78e76443-9115-45b3-b7e2-557ecc2fb08c",
                            Age = 23,
                            Name = "Ali01",
                            PhoneNumber = "123546",
                            Register = new DateTime(2022, 11, 23, 13, 56, 9, 587, DateTimeKind.Local).AddTicks(1289)
                        },
                        new
                        {
                            Id = "69e9e4a6-90a7-4113-82a3-a896d4edf08a",
                            Age = 23,
                            Name = "Ali02",
                            PhoneNumber = "123546",
                            Register = new DateTime(2022, 11, 23, 13, 56, 9, 587, DateTimeKind.Local).AddTicks(1303)
                        },
                        new
                        {
                            Id = "2946a19e-a97e-468a-aece-07b028f4f1a3",
                            Age = 23,
                            Name = "Ali03",
                            PhoneNumber = "123546",
                            Register = new DateTime(2022, 11, 23, 13, 56, 9, 587, DateTimeKind.Local).AddTicks(1318)
                        });
                });

            modelBuilder.Entity("LanguagePerson", b =>
                {
                    b.Property<string>("LanguagesId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PersonId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LanguagesId", "PersonId");

                    b.HasIndex("PersonId");

                    b.ToTable("LanguagePerson");
                });

            modelBuilder.Entity("CityCountry", b =>
                {
                    b.HasOne("EntityFrameWork02.Models.City", null)
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFrameWork02.Models.Country", null)
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CityLanguage", b =>
                {
                    b.HasOne("EntityFrameWork02.Models.City", null)
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFrameWork02.Models.Language", null)
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CityPerson", b =>
                {
                    b.HasOne("EntityFrameWork02.Models.City", null)
                        .WithMany()
                        .HasForeignKey("CitysId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFrameWork02.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("PeopleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CountryLanguage", b =>
                {
                    b.HasOne("EntityFrameWork02.Models.Country", null)
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFrameWork02.Models.Language", null)
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CountryPerson", b =>
                {
                    b.HasOne("EntityFrameWork02.Models.Country", null)
                        .WithMany()
                        .HasForeignKey("CountrysId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFrameWork02.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LanguagePerson", b =>
                {
                    b.HasOne("EntityFrameWork02.Models.Language", null)
                        .WithMany()
                        .HasForeignKey("LanguagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFrameWork02.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
